<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"
	xmlns:ui="http://java.sun.com/jsf/facelets"
	xmlns:h="http://java.sun.com/jsf/html"
	xmlns:f="http://java.sun.com/jsf/core"
	xmlns:a4j="http://richfaces.org/a4j"
	xmlns:rich="http://richfaces.org/rich"
	xmlns:mobi="http://java.sun.com/jsf/composite/mobi">

<ui:composition template="templates/template.xhtml">
	<f:metadata>
		<f:viewParam name="id" value="#{editTemplateView.resourceId}" />
		<f:viewParam name="resTypId" value="#{editTemplateView.resourceTypeId}" />
		<f:viewParam name="ctx" value="#{editTemplateView.contextIdViewParam}" />
		<f:viewParam name="rel" value="#{editTemplateView.relationIdForTemplate}" />
		<f:viewParam name="templ" value="#{editTemplateView.templateId}" />
		<f:viewParam name="cmpRev" value="#{editTemplateView.compareRevisionId}" />
		<f:viewParam name="lnWrap" value="#{editTemplateView.lineWrapping}" />
	</f:metadata>

	<ui:param name="screen" value="templateEdit" />
	<ui:define name="title">Edit ${editTemplateView.newTemplate ? 'new template' : 'template '.concat(editTemplateView.template.name)}</ui:define>

	<!--  HEADER -->
	<ui:define name="backlink">
		<h:link outcome="editResourceView" value="Back to Edit Resource"
			rendered="#{editTemplateView.editResource}"
			styleClass="btn back" onclick="showLoader();" includeViewParams="true">
			<f:param name="id" value="${editTemplateView.resourceId}" />
			<f:param name="ctx" value="${editTemplateView.contextIdViewParam}" />
			<f:param name="rel" value="${editTemplateView.relationIdForTemplate}" />
		</h:link>
		<h:link outcome="editResourceView" value="Back to Edit Resource Type"
			rendered="#{!editTemplateView.editResource}"
			styleClass="btn back" onclick="showLoader();" includeViewParams="true">
		</h:link>
	</ui:define>

	<ui:define name="pagetitle">
		${editTemplateView.newTemplate ? 'New' : 'Edit'} template
		<h:outputScript	name="bower/google-diff-match-patch-js/diff_match_patch.js"
			target="head" rendered="${editTemplateView.compareMode}" />
		<h:outputScript name="bower/codemirror/lib/codemirror.js" target="head" />
		<h:outputScript name="bower/codemirror/mode/velocity/velocity.js" target="head" />
		<h:outputScript name="bower/codemirror/mode/xml/xml.js" target="head" />
		<h:outputScript name="bower/codemirror/mode/toml/toml.js" target="head" />
		<h:outputScript name="bower/codemirror/mode/yaml/yaml.js" target="head" />
		<h:outputScript name="bower/codemirror/mode/javascript/javascript.js" target="head" />
		<h:outputScript name="bower/codemirror/mode/properties/properties.js" target="head" />
		<h:outputScript name="bower/codemirror/mode/shell/shell.js" target="head" />
		<h:outputScript name="bower/codemirror/addon/display/fullscreen.js" target="head" />
		<h:outputScript name="bower/codemirror/addon/dialog/dialog.js" target="head" />
		<h:outputScript name="bower/codemirror/addon/search/searchcursor.js" target="head" />
		<h:outputScript name="bower/codemirror/addon/search/search.js"	target="head" />
		<h:outputScript name="bower/codemirror/addon/merge/merge.js" target="head" rendered="${editTemplateView.compareMode}" />
		<h:outputScript name="bower/cm-show-invisibles/lib/show-invisibles.js" target="head" />
		<h:outputStylesheet name="bower/codemirror/lib/codemirror.css" />
		<h:outputStylesheet name="bower/codemirror/addon/merge/merge.css" />
		<h:outputStylesheet name="bower/codemirror/addon/dialog/dialog.css" />
		<h:outputStylesheet	name="bower/codemirror/addon/display/fullscreen.css" />
        <h:outputStylesheet	name="css/codemirror_custom.css" />
		<mobi:warnOnChange/>
	</ui:define>

	<ui:define name="headerButtons">
		<h:panelGroup id="saveButtons">
			<h:commandLink styleClass="btn primary right"
				rendered="#{editTemplateView.canModifyTemplates()}"
				onclick="disableChangeCheck();${editTemplateView.compareMode ? 'saveMerge();' : ''}showLoader();"
				action="#{editTemplateView.save()}">
				<h:outputText
					value="${editTemplateView.newTemplate ? 'Create template' : 'Save changes'}" />
			</h:commandLink>

		</h:panelGroup>
	</ui:define>

	<ui:define name="body">
		<h:panelGroup layout="block" id="navig">
			<aside> <nav>
			<ul>
				<li class="current"><h:commandLink value="Template"
						execute="@none" /></li>
			</ul>

			</nav> </aside>
		</h:panelGroup>
		<section id="content">
		<div class="container ">
			<script type="text/javascript">
			function hasContentChanged(){
				if(originalValue===getEditorValue()){
					return false;
				}
				else{
					return true;
				}	
			}			
			
			function loadRevision(rev){
				var lineWrap = document.getElementById('lineWrapping').checked;
				var url = window.location.href;				
				window.location.href = url.substring(0,url.indexOf("?"))+"?${editTemplateView.editResource ? 'id='.concat(editTemplateView.resourceId) : 'resTypId='.concat(editTemplateView.resourceTypeId)}&amp;ctx\=${editTemplateView.contextIdViewParam}${editTemplateView.relation ? '&amp;rel='.concat(editTemplateView.relationIdForTemplate) : ''}&amp;templ\=${editTemplateView.templateId}&amp;cmpRev\="+rev+"&amp;lnWrap\="+lineWrap;
			}							
			</script>
			<article>
			<div class="well">
				<h2>${editTemplateView.newTemplate ? 'New template'
					: editTemplateView.template.name}</h2>
				<div class="right marginLeft10">
					<label class="control-label">Compare with history:</label>
					<h:selectOneMenu
						value="#{editTemplateView.compareRevisionId}"
						onchange="loadRevision(this.options[this.selectedIndex].value);">
						<f:selectItem itemLabel="Don't compare" itemValue="${null}"/>
						<f:selectItems
							value="${editTemplateView.revisionInformations}"
							itemLabel="${rev.displayName}" itemValue="${rev.revision}"
							var="rev" />
					</h:selectOneMenu>
				</div>
				<div class="controls right">
					<label class="control-label">Wrap lines:</label>
					<h:selectBooleanCheckbox id="lineWrapping" onchange="toggle('lineWrapping');"
											 value="${editTemplateView.lineWrapping}">
						<a4j:ajax />
					</h:selectBooleanCheckbox>
				</div>
				<hr />
				<h:panelGroup layout="block" styleClass="compareTag control-label"
					rendered="${editTemplateView.compareMode}">Current</h:panelGroup>
				<h:panelGroup layout="block" styleClass="controls"
					rendered="${editTemplateView.compareMode}">
					<div class="CodeMirror-merge-2pane">
						<div class="CodeMirror-merge-pane" />
						<div class="CodeMirror-merge-gap" />
						<div class="CodeMirror-merge-pane"
							style="margin-left: -70px; position: absolute;">
							<div class="compareTag">${editTemplateView.compareRevision.displayName}</div>
						</div>
					</div>
				</h:panelGroup>
				<div style="height: 0px; clear: both;"></div>

				<label class="control-label"> <h:outputText
						value="Template name:" />
				</label>
				<div class="controls">
					<div class="CodeMirror-merge-2pane">
						<div class="CodeMirror-merge-pane">
							<h:inputText
								value="#{editTemplateView.template.name}"
										 disabled="#{!editTemplateView.canModifyTemplates()}"
								label="Name" styleClass="changeAware">
							</h:inputText>

						</div>
						<h:panelGroup layout="block" styleClass="CodeMirror-merge-gap"
							rendered="${editTemplateView.compareMode}" />
						<h:panelGroup layout="block"
							style="position: absolute; margin-left: -70px;"
							styleClass="CodeMirror-merge-pane compareText"
							rendered="${editTemplateView.compareMode}">${editTemplateView.compareTemplate.name}</h:panelGroup>
						<div style="height: 0px; clear: both;"></div>
					</div>
				</div>
				<label class="control-label"> <h:outputText
						value="Path/filename:"
						disabled="#{!editTemplateView.canModifyTemplates()}"/>
				</label>
				<div class="controls">
					<div class="CodeMirror-merge-2pane">
						<div class="CodeMirror-merge-pane">
							<h:inputText
								value="#{editTemplateView.template.targetPath}"
								required="false" label="Path_Filename" id="templateFileName"
										 disabled="#{!editTemplateView.canModifyTemplates()}" styleClass="changeAware">
							</h:inputText>
						</div>
						<h:panelGroup layout="block" styleClass="CodeMirror-merge-gap"
							rendered="${editTemplateView.compareMode}" />
						<h:panelGroup layout="block"
							styleClass="CodeMirror-merge-pane compareText"
							rendered="${editTemplateView.compareMode}"
							style="position: absolute; margin-left: -70px;">
						${editTemplateView.compareTemplate.targetPath}
						</h:panelGroup>
						<div style="height: 0px; clear: both;"></div>
					</div>
				</div>
				<label class="control-label"> <h:outputText
						value="Valid for:" />
				</label>
				<div class="controls">
					<div class="CodeMirror-merge-2pane">
						<div class="CodeMirror-merge-pane">
							<h:selectManyCheckbox layout="lineDirection"
								styleClass="checkboxList changeAware"
								converter="javax.faces.Integer"
								value="#{editTemplateView.selectedTargetPlatforms}" disabled="#{!editTemplateView.canModifyTemplates()}">
								<f:selectItems value="${editTemplateView.sessionContext.targetPlatforms}"
									var="platform" itemLabel="${platform.name}"
									itemValue="${platform.id}" />
							</h:selectManyCheckbox>
						</div>
						<h:panelGroup layout="block" styleClass="CodeMirror-merge-gap"
							rendered="${editTemplateView.compareMode}" />
						<h:panelGroup layout="block"
							styleClass="CodeMirror-merge-pane compareText"
							rendered="${editTemplateView.compareMode}"
							style="position: absolute; margin-left: -70px;">
							<ui:repeat
								value="${editTemplateView.selectedTargetPlatformsOfCompareTemplateAsList}"
								var="templName">
								<span style="margin-right: 5px;">${templName}</span>
							</ui:repeat>
						</h:panelGroup>
						<div style="height: 0px; clear: both;"></div>
					</div>
				</div>
				<h:panelGroup class="codeMirrorEditor">
				<div style="height: 0px; clear: both;"></div>
				<h:inputTextarea id="codeMirrorReference"
					disabled="#{!editTemplateView.canModifyTemplates()}"
					value="#{editTemplateView.template.fileContent}"
					label="Filecontent" required="false" styleClass="changeAware">
				</h:inputTextarea>				
				<h:inputTextarea id="diffOriginal" style="display:none;"
					disabled="true"
					value="${editTemplateView.compareTemplate.fileContent}"
					rendered="${editTemplateView.compareMode}" />
				<!-- codemirror -->
				<script type="text/javascript">		
						
			    	var codeEditor = document.getElementById("codeMirrorReference");
					var originalValue = codeEditor.value;
			    	var code = codeEditor.value;
					var templateName = document.getElementById("templateFileName").value;
					var mode = "velocity";
					var file = templateName.split(".");
					var readonlyEditor = (document.getElementById("codeMirrorReference").disabled == true);
					var lineWrap = document.getElementById('lineWrapping').checked;
				    filetype = file[file.length -1];

				    if (filetype == "xml"){
							mode = "xml";
					}
				    else if (filetype == "sh"){
						mode = "shell";
				    }
				    else if (filetype == "properties"){
						mode = "properties";
				    }
				    else if (filetype == "ftl"){
						mode = "freemarker";
				    } 
				    else if (filetype == "json"){
						mode = "application/json";
				    }
				    else if (filetype == "yaml"){
						mode = "yaml";
				    }
				    else if (filetype == "toml"){
						mode = "toml";
				    }
				    else{
						mode="velocity";
					}
                     
                    ${editTemplateView.compareMode ? 'showMerge()' : 'showStdEditor()'};
                    
                    var myCodeMirror;
                        
                    function showStdEditor(){
                        myCodeMirror = CodeMirror.fromTextArea(codeEditor, {
                        	value: code,
                        	smartIndent: false,
                        	mode: mode, 
                        	lineNumbers: true,
                        	readOnly: readonlyEditor,
                        	showInvisibles: true,
							lineWrapping: lineWrap,
							extraKeys: {
                       	//key binding for toggle full screen on/off
                       "F11": function(cm) {
                           cm.setOption("fullScreen", !cm.getOption("fullScreen"));
                       },
                        
                      //key binding for switch full screen off
                        "Esc": function(cm) {
                            if (cm.getOption("fullScreen")) cm.setOption("fullScreen", false);
                        }
                    	}});
                    }
                    
                    var codemirrorDiff;
                    
                    function showMerge(){
                    	codeEditor.style.display='none';
                     	codemirrorDiff = CodeMirror.MergeView(codeEditor.parentNode, {
                   		 value: code,
                   		 smartIndent: false,
                   		 orig: document.getElementById('diffOriginal').value,
   						 lineNumbers: true,
						 readOnly: readonlyEditor,
    					 mode: mode,
    					 highlightDifferences: true,
    					 showInvisibles: false,
    					 lineWrapping: lineWrap,
    					 extraKeys: {
                       	//key binding for toggle full screen on/off
                       "F11": function(cm) {
                           cm.setOption("fullScreen", !cm.getOption("fullScreen"));
                       },
                        
                      //key binding for switch full screen off
                        "Esc": function(cm) {
                            if (cm.getOption("fullScreen")) cm.setOption("fullScreen", false);
                        }
                    	}                    
                   		} );
                    }
                    
                    function getEditorValue(){
                    	if(codemirrorDiff!==undefined){
                    		return codemirrorDiff.edit.doc.getValue();
                    	}
                    	else{
                    		return myCodeMirror.getDoc().getValue();
                    	}
                    }

                    function toggle(option) {
						if(codemirrorDiff!==undefined){
							codemirrorDiff.edit.setOption(option,!codemirrorDiff.edit.getOption(option));
							if(codemirrorDiff.right.orig!==undefined){
								codemirrorDiff.right.orig.setOption(option,!codemirrorDiff.right.orig.getOption(option));
							}
						}
						else{
							myCodeMirror.setOption(option,!myCodeMirror.getOption(option));
						}
					}
                    
                    function saveMerge(){
                    	codeEditor.value = codemirrorDiff.edit.doc.getValue();
                    }                 
                    
				    </script>
				</h:panelGroup>
				<p>
					<span class="meta">Enter fullscreen: F11, leave fullscreen:
						ESC, Start searching: Ctrl-F, Find next: Ctrl-G, Find previous:
						Shift-Ctrl-G, Replace: Shift-Ctrl-F, Replace all: Shift-Ctrl-R</span>
				</p>
			</div>
			</article>
		</div>
		</section>

	</ui:define>
</ui:composition>
</html>
